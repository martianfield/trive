{
  "name": "Trive",
  "tagline": "",
  "body": "# trive\r\n\r\n\r\n## Sequences\r\n\r\nTo create a sequence use `trive.sequence.create(<options>)`.\r\n\r\n### Options\r\n\r\nThe options object takes the following properties:\r\n\r\n* `initial` - the initial value (a number) from which to start the sequence. The first item in the sequence will have this value. Default value is `1` (is ignored if you pass a `governor`)\r\n* `cycles` - the number of cycles to create (is ignored if you pass a `governor`)\r\n* `increase` - the value by which to increase an item's value. More details: see `mode`\r\n* `mode` - the mode to use to calculate the value of items. There are two modes:\r\n    * `sequence.modes.Linear` (default) - the linear mode calculates an item's value by adding the `increase` value to the value of the predecessor / governor\r\n    * `sequence.modes.Exponential` - calculates an item's value by multiplying its predecessor's / governor's value with the `increase` value\r\n* `governor` - a sequence used to base values on. If you pass a governor the sequence will have\r\n    * the same number of cycles as the governor (i.e. the `cycles` value is ignored)\r\n    * have its item values based on the item values of the governor (instead of using an item's predecessor as the base value)\r\n     \r\n### Result\r\n\r\nThe result of `sequence.create` is an object of the following structure:\r\n\r\n```json\r\n{\r\n    items:[\r\n        { value: 1 },\r\n        ...\r\n        { value: n }\r\n    ]\r\n}\r\n```\r\n    \r\n    \r\n### Examples\r\n\r\n#### Linear Sequence without Governor\r\n\r\n```javascript\r\nconst sequence = require('trive').sequence\r\n\r\nlet options = {\r\n    cycles: 3,\r\n    initial: 10,\r\n    increase: 5,\r\n    mode: sequence.modes.Linear\r\n}\r\nlet s = sequence.create(options)\r\n```\r\n\r\nThe resulting sequence `s` looks like this:\r\n\r\n```json\r\n{\r\n    items: [\r\n        { value: 10 },\r\n        { value: 15 },\r\n        { value: 20 }\r\n    ]\r\n}\r\n```\r\n\r\n#### Exponential Sequence without Governor\r\n\r\n```javascript\r\nlet options = {\r\n    initial:10,\r\n    cycles:3,\r\n    increase:1.5,\r\n    mode:sequence.modes.Exponential\r\n}\r\n\r\nlet s = sequence.create(options)\r\n```\r\n\r\nThe resulting sequence `s` looks like this:\r\n\r\n```json\r\n{\r\n    items: [\r\n        { value: 10 },\r\n        { value: 15 },\r\n        { value: 22.5 }\r\n    ]\r\n}\r\n``` \r\n\r\n\r\n#### Sequnece with Governor",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}